spring.config.import=optional:classpath:.env
# ========= Application =========
spring.application.name=ProductClientService

# ========= Database =========
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA setting
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.jdbc.batch_size=50
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# ========= Redis =========
spring.redis.host=${REDIS_HOST}
spring.redis.port=${REDIS_PORT}
spring.redis.username=${REDIS_USERNAME}
spring.redis.password=${REDIS_PASSWORD}
spring.redis.ssl=true
spring.redis.client-type=lettuce

# ========= JWT =========
jwt.private.key.path=classpath:keys/private_key.pem
jwt.public.key.path=classpath:keys/public_key.pem
jwt.expiration.in.millis=1296000000

# ========= Feign Clients =========
feign.client.orderpaymentnotification.url=http://localhost:8081
feign.client.delivery_inventory_client.url=http://localhost:8082
# ========= Google API =========
google.api.key=${GOOGLE_API_KEY}

# ========= Elasticsearch =========
elasticsearch.url=${ELASTICSEARCH_URL}
elasticsearch.username=${ELASTICSEARCH_USERNAME}
elasticsearch.apiKey=${ELASTICSEARCH_API_KEY}

# ========= AWS S3 =========
cloud.aws.credentials.access-key=${AWS_ACCESS_KEY}
cloud.aws.credentials.secret-key=${AWS_SECRET_KEY}
cloud.aws.region.static=${AWS_REGION}
cloud.aws.s3.bucket-name=${AWS_S3_BUCKET}

# ========= Kafka =========
kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS}
kafka.sasl.username=${KAFKA_SASL_USERNAME}
kafka.sasl.password=${KAFKA_SASL_PASSWORD}
kafka.jaas.template=org.apache.kafka.common.security.scram.ScramLoginModule required username="%s" password="%s";
kafka.truststore.password=${KAFKA_TRUSTSTORE_PASSWORD}

# ========= Cloudinary =========
cloudinary.cloud_name=${CLOUDINARY_CLOUD_NAME}
cloudinary.api_key=${CLOUDINARY_API_KEY}
cloudinary.api_secret=${CLOUDINARY_API_SECRET}
