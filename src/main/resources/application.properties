spring.application.name=ProductClientService
server.port=${PORT:8080}

# DB
spring.datasource.url=${spring.datasource.url}
spring.datasource.username=${spring.datasource.username}
spring.datasource.password=${spring.datasource.password}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA settings
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# JWT settings
jwt.private.key.path=classpath:keys/private_key.pem
jwt.public.key.path=classpath:keys/public_key.pem
jwt.expiration.in.millis=1296000000

# Redis
spring.redis.host=${spring.redis.host}
spring.redis.port=${spring.redis.port}
spring.redis.username=${spring.redis.username}
spring.redis.password=${spring.redis.password}
spring.redis.ssl=true
spring.redis.client-type=lettuce

# API Keys
google.api.key=${google.api.key}
feign.client.orderpaymentnotification.url=${feign.client.orderpaymentnotification.url}
feign.client.delivery_inventory_client.url=${feign.client.delivery_inventory_client.url}

# Elasticsearch
elasticsearch.url=${elasticsearch.url}
elasticsearch.username=${elasticsearch.username}
elasticsearch.apiKey=${elasticsearch.apiKey}

# S3
cloud.aws.credentials.access-key=${cloud.aws.credentials.access-key}
cloud.aws.credentials.secret-key=${cloud.aws.credentials.secret-key}
cloud.aws.region.static=${cloud.aws.region.static}
cloud.aws.s3.bucket-name=${cloud.aws.s3.bucket-name}

# Hibernate Logging + Batching
spring.jpa.properties.hibernate.format_sql=true
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
spring.jpa.properties.hibernate.jdbc.batch_size=50
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true

# Kafka
kafka.bootstrap-servers=${kafka.bootstrap-servers}
kafka.sasl.username=${kafka.sasl.username}
kafka.sasl.password=${kafka.sasl.password}
kafka.jaas.template=org.apache.kafka.common.security.scram.ScramLoginModule required username="%s" password="%s";
kafka.truststore.password=${kafka.truststore.password}

# Cloudinary
cloudinary.cloud_name=${cloudinary.cloud_name}
cloudinary.api_key=${cloudinary.api_key}
cloudinary.api_secret=${cloudinary.api_secret}
